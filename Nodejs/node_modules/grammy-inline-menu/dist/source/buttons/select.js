"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.generateSelectButtons = void 0;
const index_js_1 = require("../choices/index.js");
const understand_choices_js_1 = require("../choices/understand-choices.js");
const prefix_js_1 = require("../prefix.js");
const align_js_1 = require("./align.js");
function generateSelectButtons(actionPrefix, choices, options) {
    return async (context, path) => {
        if (await options.hide?.(context, path)) {
            return [];
        }
        const choicesConstant = typeof choices === 'function' ? await choices(context) : choices;
        const choiceKeys = (0, understand_choices_js_1.getChoiceKeysFromChoices)(choicesConstant);
        (0, understand_choices_js_1.ensureCorrectChoiceKeys)(actionPrefix, path, choiceKeys);
        const textFunction = (0, index_js_1.createChoiceTextFunction)(choicesConstant, options.buttonText);
        const formatFunction = options.formatState ?? ((_, textResult, state) => (0, prefix_js_1.prefixEmoji)(textResult, state, { hideFalseEmoji: !options.showFalseEmoji }));
        const currentPage = await options.getCurrentPage?.(context);
        const keysOfPage = (0, align_js_1.getButtonsOfPage)(choiceKeys, options.columns, options.maxRows, currentPage);
        const buttonsOfPage = await Promise.all(keysOfPage
            .map(async (key) => {
            const textResult = await textFunction(context, key);
            const state = await options.isSet(context, key);
            const text = await formatFunction(context, textResult, state, key);
            const dropinLetter = state ? 'F' : 'T';
            const relativePath = actionPrefix + dropinLetter + ':' + key;
            return { text, relativePath };
        }));
        const rows = (0, align_js_1.getButtonsAsRows)(buttonsOfPage, options.columns);
        if (options.setPage) {
            rows.push((0, index_js_1.generateChoicesPaginationButtons)(actionPrefix, choiceKeys.length, currentPage, options));
        }
        return rows;
    };
}
exports.generateSelectButtons = generateSelectButtons;
//# sourceMappingURL=select.js.map